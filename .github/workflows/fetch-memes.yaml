name: Fetch Memes (Cronjob)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"

jobs:
  fetch-memes:
    name: "Fetch memes daily"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      actions: read

    steps:
      - name: Create GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.README_BOT_APP_ID }}
          private-key: ${{ secrets.README_BOT_APP_PRIVATE_KEY }}

      - name: "Checkout (blobless, no memes)"
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
          filter: blob:none

      - name: "Limit working tree to code only"
        run: |
          git sparse-checkout init --cone
          git sparse-checkout set src/python_memer
          git remote set-url origin \
            https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/${{ github.repository }}.git

      - name: "Setup Python"
        uses: actions/setup-python@v3
        with:
          python-version: '3.13'

      - name: "Install dependencies"
        run: |
          pip install -r src/python_memer/requirements.txt
          sudo apt install -y gifsicle

      - name: "Fetch all meme sources"
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          python src/python_memer/main.py

      - name: "Commit & push daily memes"
        id: commit
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          set -euo pipefail
          DATE="$(date -u +%Y%m%d)"
          BRANCH="memes/${DATE}-${GITHUB_RUN_ID}"

          git config user.name  "dynamic-readme-meme-updater[bot]"
          git config user.email "dynamic-readme-meme-updater[bot]@users.noreply.github.com"

          git add --sparse -f memes/ || true

          if git diff --cached --quiet; then
            echo "No changes in memes/"
            echo "changed=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          git checkout -b "$BRANCH"
          git commit -m "chore(memes): daily memes for ${DATE}"
          git push -u origin "$BRANCH"

          echo "branch=$BRANCH" >> "$GITHUB_OUTPUT"
          echo "date=$DATE" >> "$GITHUB_OUTPUT"
          echo "changed=true" >> "$GITHUB_OUTPUT"

      - name: Create pull request with daily memes
        if: steps.commit.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          TITLE="Daily memes (${{ steps.commit.outputs.date }})"
          BODY="Automated PR with daily memes."

          gh pr create \
            --base main \
            --head "${{ steps.commit.outputs.branch }}" \
            --title "$TITLE" \
            --body "$BODY"
          sleep 10s

      - name: Wait for pre-commit CI to finish
        if: steps.commit.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh pr checks \
            ${{ steps.commit.outputs.branch }} \
            --watch \
            --required

      - name: Merge pull request into main
        if: steps.commit.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          PR_NUMBER="$(gh pr view "${{ steps.commit.outputs.branch }}" --json number -q .number)"
          gh pr merge "$PR_NUMBER" --squash --delete-branch --admin
